<?xml version="1.0" encoding="UTF-8"?>



<project basedir="." name="pymontecarlo-dtsa" default="help">

    <!-- Dependencies -->
    <path id="libant.classpath">
        <fileset dir="lib" includes="*.jar" />
    </path>
    <taskdef name="deb"
             classname="com.googlecode.ant_deb_task.Deb"
             classpathref="libant.classpath" />

    <!-- Read the local properties (if present) -->
    <property name="property.file" location="build.prop" />
    <property file="${property.file}" />

    <!-- Set default values to properties -->
    <echo message="===&gt; Input directories" />

    <property name="src.dir" location="${basedir}/src" />
    <echo message="  src.dir = ${src.dir}" />

    <property name="lib.dir" location="${basedir}/lib" />
    <echo message="  lib.dir = ${lib.dir}" />

    <property name="epq.dir" location="${basedir}/../DTSA2/NWMR/trunk" />
    <echo message="  epq.dir = ${epq.dir}" />

    <property name="epq.src.dir" location="${epq.dir}/EPQ/src" />
    <echo message="  epq.src.dir = ${epq.src.dir}" />

    <property name="epq.lib.dir" location="${epq.dir}/3rd Party Libraries" />
    <echo message="  epq.lib.dir = ${epq.lib.dir}" />

    <echo message="===&gt; Output directories" />

    <property name="tmp.dir" location="${java.io.tmpdir}" />
    <echo message="  tmp.dir = ${tmp.dir}" />

    <property name="build.dir" location="${tmp.dir}/build" />
    <echo message="  build.dir = ${build.dir}" />

    <property name="dist.dir" location="${tmp.dir}/dist" />
    <echo message="  dist.dir = ${dist.dir}" />

    <!-- Read the version file -->
    <property file="${src.dir}/version.prop" />
    <echo message="  version = ${version}" />

    <target name="help" />

    <target name="-init" description="Create all directories for build">
        <mkdir dir="${build.dir}" />
    </target>

    <target name="clean"
            description="Removes all temporary files and directories">
        <delete dir="${build.dir}" />
    </target>

    <target name="clean-all"
            description="Remove all created files and directories"
            depends="clean">
        <delete dir="${dist.dir}" />
        <delete dir="${doc.dir}" />
    </target>

    <target name="compile-epq" description="Build EPQ Library" depends="-init">
        <javac destdir="${build.dir}"
               source="1.7"
               target="1.7"
               encoding="iso-8859-1"
               srcdir="${epq.src.dir}"
               extdirs="${epq.lib.dir}"
               failonerror="true"
               debug="true"
               deprecation="true"
               includeAntRuntime="false">
            <include name="**/gov/nist/microanalysis/**/*" />
            <include name="**/flanagan/**/*" />
            <exclude name="gov/nist/microanalysis/NISTMonte/MeshedRegion.java" />
            <exclude name="gov/nist/microanalysis/NISTMonte/MeshElementRegion.java" />
        </javac>
    </target>

    <target name="compile-pymontecarlo"
            description="Build pymontecarlo"
            depends="-init">
        <javac destdir="${build.dir}"
               source="1.7"
               target="1.7"
               encoding="iso-8859-1"
               srcdir="${src.dir}"
               extdirs="${lib.dir}"
               failonerror="true"
               debug="true"
               deprecation="true"
               includeAntRuntime="false">
            <include name="**" />
        </javac>
    </target>

    <target name="jar"
            description="Create jar for pymontecarlo"
            depends="compile-epq,compile-pymontecarlo">
        <jar destfile="${dist.dir}/pymontecarlo-dtsa.jar">
            <fileset dir="${build.dir}" includes="**" />
            <fileset dir="${src.dir}">
                <include name="**" />
            </fileset>
            <fileset dir="${epq.src.dir}">
                <include name="**/gov/nist/microanalysis/**/*" />
                <include name="**/flanagan/**/*" />
            </fileset>

            <manifest>
                <attribute name="Main-Class"
                           value="pymontecarlo.program.nistmonte.ui.cui.Main" />
                <attribute name="Class-Path"
                           value="nujan-1.4.1.1.jar jdom-2.0.4.jar commons-cli-1.2.jar xstream-1.4.1.jar xpp3-1.1.4c.jar junit.jar Jama-1.0.3.jar derby.jar derbynet.jar derbyclient.jar" />
            </manifest>
        </jar>
    </target>

    <target name="dist-zip"
            description="Distribute pymontecarlo in a ZIP"
            depends="jar">
        <zip destfile="${dist.dir}/pymontecarlo-dtsa-${version}.zip">
            <zipfileset dir="${lib.dir}" prefix="pymontecarlo-dtsa">
                <include name="nujan*.jar" />
                <include name="jdom*.jar" />
                <include name="commons-cli*.jar" />
                <include name="junit*.jar" />
            </zipfileset>
            <zipfileset dir="${epq.lib.dir}" prefix="pymontecarlo-dtsa">
                <include name="xstream*.jar" />
                <include name="xpp3*.jar" />
                <include name="Jama*.jar" />
                <include name="derby*.jar" />
            </zipfileset>
            <zipfileset dir="${dist.dir}" prefix="pymontecarlo-dtsa">
                <include name="pymontecarlo-dtsa.jar" />
            </zipfileset>
        </zip>
        <delete file="${dist.dir}/pymontecarlo-dtsa.jar" />
    </target>

    <target name="dist-deb"
            description="Distribute pymontecarlo in a deb"
            depends="jar">
        <!-- Create copyright -->
        <echo file="${dist.dir}/copyright">Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
Upstream-Name: libpymontecarlo-java
Upstream-Contact: <![CDATA[Philippe Pinard <philippe.pinard@gmail.com>]]> 

Files: *
Copyright: 2013-2014 Philippe Pinard
License: GPLv3</echo>

        <!-- Create changelog -->
        <tstamp>
            <format property="TODAY"
                    pattern="EEE, dd MMM yyyy HH:mm:ss  ZZZZZ"
                    locale="en,GB" />
        </tstamp>
        <echo file="${dist.dir}/changelog">libpymontecarlo-java (${version}) all; urgency=low
  * Release of ${version}.
 -- <![CDATA[Philippe Pinard <philippe.pinard@gmail.com>]]>  ${TODAY}</echo>
        <!-- Note: compression level can not be used in gzip task -->
        <exec executable="gzip" failonerror="true">
            <arg value="-9" />
            <arg value="-f" />
            <arg value="${dist.dir}/changelog" />
        </exec>

        <!-- Create postinst -->
        <echo file="${dist.dir}/postinst">#!/bin/sh
set -e
if [ "$1" = "configure" ] ; then
  echo "Configuring libpymontecarlo-java"

  ln -s /usr/share/libpymontecarlo-java/lib/pymontecarlo-dtsa.jar /usr/share/java/pymontecarlo-dtsa.jar
  
  if [ ! -f /usr/share/java/jdom2.jar ]; then
    ln -s /usr/share/libpymontecarlo-java/lib/jdom2.jar /usr/share/java/jdom2.jar
  fi

  if [ ! -f /usr/share/java/nujan.jar ]; then
    ln -s /usr/share/libpymontecarlo-java/lib/nujan.jar /usr/share/java/nujan.jar
  fi
fi
exit 0</echo>

        <!-- Create postrm -->
        <echo file="${dist.dir}/postrm">#!/bin/sh
set -e
if [ "$1" = "remove" ] ; then
  echo "Purging libpymontecarlo-java"

  rm /usr/share/java/pymontecarlo-dtsa.jar
            
  if [ ! -e /usr/share/java/jdom2.jar ]; then
    rm /usr/share/java/jdom2.jar
  fi

  if [ ! -e /usr/share/java/nujan.jar ]; then
    rm /usr/share/java/nujan.jar
  fi
fi
exit 0</echo>

        <!-- Create deb -->
        <deb package="libpymontecarlo-java"
             todir="${dist.dir}"
             version="${version}"
             section="java"
             priority="standard"
             architecture="all"
             depends="libcommons-cli-java, libjama-java, sun-javadb-core | libderby-java, sun-javadb-client | libderbyclient-java, junit4, libxpp3-java, libxstream-java"
             suggests="libjdom2-java"
             postinst="${dist.dir}/postinst"
             postrm="${dist.dir}/postrm">
            <maintainer name="Philippe Pinard"
                        email="philippe.pinard@gmail.com" />
            <description synopsis="Library to run DTSA-II/NISTMonte simulations with pyMonteCarlo">pyMonteCarlo is a programming interface to run identical simulations using different Monte Carlo programs.</description>
            <tarfileset dir="${dist.dir}"
                        prefix="usr/share/libpymontecarlo-java/lib">
                <include name="pymontecarlo-dtsa.jar" />
            </tarfileset>
            <tarfileset dir="${lib.dir}"
                        fullpath="usr/share/libpymontecarlo-java/lib/nujan.jar">
                <include name="nujan*.jar" />
            </tarfileset>
            <tarfileset dir="${lib.dir}"
                        fullpath="usr/share/libpymontecarlo-java/lib/jdom2.jar">
                <include name="jdom*.jar" />
            </tarfileset>
            <tarfileset dir="${dist.dir}"
                        prefix="usr/share/doc/libpymontecarlo-java">
                <include name="copyright" />
                <include name="changelog.gz" />
            </tarfileset>
        </deb>
    </target>


</project>